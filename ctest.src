;  ctest - test erasing/flashing the cart
;
;  Copyright (C) 2010 Matthias Reichl <hias@horus.com>
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

	.include "cio.inc"
	.include "libflash.inc"

; temporary ZP vectors
SRCVEC	= $E6	; ,$E7 ($E0-$E5 are used by libflash)
DSTVEC	= $E8	; ,$E9
TMPVEC	= SRCVEC	; for romram.src

START	= $2000

	.BANK
	* = START

	JMP MAIN

	.include "libflash.src"

MAIN	JSR INIT
	JSR FINIT
	JSR FDISABLE

; clear RAM from $8000-$BFFF
	LDA #0
	STA DSTVEC
	LDA #$80
	STA DSTVEC+1
	LDY #0
	LDX #$40	; 16k = 64 pages
	LDA #0
CLRLP	STA (DSTVEC),Y
	INY
	BNE CLRLP
	INC DSTVEC+1
	DEX
	BNE CLRLP

MAINLP	BPUT 0, TTITLEL, TTITLE
	JSR FINIT
	JSR FENABLE

.if .def ATARIMAX8 .or .def MEGAMAX16
; detect second chip
	LDA #8
	STA FLASHADR+2
	JSR FDETECT
	LDA FTYPE
	STA FTYPE2
	LDA #0
	STA FLASHADR+2
.endif

	JSR FDETECT
	JSR FDISABLE

	LDA FTYPE
	JSR PFTYPE
	LDA FTYPE
	BPL FOK

	JSR GETCHAR
	CPY #128
	BNE MAINLP
MXIT	JMP EXIT

FOK	LDA FSIZE+2
	STA ENDHI
	LDA #1
	STA NUMCHIP

.if .def ATARIMAX8 .or .def MEGAMAX16
	BPUT 0, TCHIPL, TCHIP
	LDA FTYPE
	CMP FTYPE2
	BNE ONECHIP
	ASL ENDHI
	INC NUMCHIP
ONECHIP	LDA NUMCHIP
	CLC
	ADC #'0
	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR
.endif

MOK	BPUT 0, TMENUL, TMENU

MENULP	
	JSR GETCHAR
	CPY #128
	BNE MENUL1
	JMP MAINLP
MENUL1	CMP #'0
	BNE NEXIT
EXIT	JSR CLEANUP
	JMP ($A)

NEXIT	CMP #'1
	BNE MENULP

	JSR PUTCHAR

	LDA #155
	JSR PUTCHAR

; reset loop counter
	LDA #0
	STA LOOPCNT
	STA LOOPCNT+1

TESTLP	LDA #155
	JSR PUTCHAR
	JSR PLOOP

	BPUT 0, TERASL, TERAS

	JSR FADRZERO
	JSR FENABLE
	JSR FCERAS

.if .def ATARIMAX8 .or .def MEGAMAX16
; also erase second chip, combine status results
	PHP
	LDA NUMCHIP
	CMP #2
	BCC AMAX1

	PLA
	STA TMPSTAT
	LDA FSIZE+2
	STA FLASHADR+2
	JSR FCERAS
	PHP
	PLA
	ORA TMPSTAT
	PHA
AMAX1	PLP
.endif
	PHP
	JSR FDISABLE
	PLP
	BPL TEST1
	JSR PERROR
	JMP DOCONT
TEST1	JSR POK

; skip the very first block

.if BANKSIZ=8
; set flash address to $2000
	LDA #$20
.else ; 16k cart
	LDA #$40
.endif
	STA FLASHADR+1

	LDA #0
	STA FLASHADR
	STA FLASHADR+2
	LDA #<DATABUF
	STA DATAADR
	LDA #>DATABUF
	STA DATAADR+1

TESTLP1	JSR PFLADR

; fill buffer with random data
	LDA #<DATABUF
	STA DSTVEC
	LDA #>DATABUF
	STA DSTVEC+1
	LDX #$20	; $20 pages = 8k
	LDY #0
RNDLP	LDA $D20A
	STA (DSTVEC),Y
	INY
	BNE RNDLP
	INC DSTVEC+1
	DEX
	BNE RNDLP
	
	JSR FENABLE
	LDX #$20
	JSR FWPAGE
	BMI TEST2E
	LDX #$20
	JSR FCPAGE
TEST2E	PHP
	JSR FDISABLE
	PLP
	BPL TEST2
	JSR PERRADR
	JSR PERRTYP
	JMP DOCONT
TEST2	JSR POK

	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC TEST3
	INC FLASHADR+2
TEST3	
	LDA FLASHADR+2
	CMP ENDHI
	BNE TESTLP1
	INC LOOPCNT
	BNE L1
	INC LOOPCNT+1

L1	JMP TESTLP

DOCONT	JSR PLOOP
	BPUT 0, TCONTL, TCONT
	JSR GETCHAR
	JMP MAINLP

INIT	LDA 106
	STA M106
	LDA 740
	STA M740
	LDA #$80
	STA 106
	STA 740
	JSR GR0

	LDA $D301
	STA MD301
	ORA #2
	STA $D301
	RTS

CLEANUP	LDA MD301
	STA $D301
	LDA M106
	STA 106
	LDA M740
	STA 740
	JMP GR0

M106	.BYTE 0
M740	.BYTE 0
MD301	.BYTE 0

TMPSTAT	.BYTE 0

; print loop counter
PLOOP	BPUT 0, TLOOPL, TLOOP
	LDX LOOPCNT
	LDY LOOPCNT+1
	JSR PRDEC
	LDA #155
	JSR PUTCHAR
	RTS

LOOPCNT	.WORD 0

; 3rd byte of flash size (2=128k, 8=512k, 16=1024k)
ENDHI	.BYTE 0

; number of flash chips
NUMCHIP	.BYTE 0

; second flash chip type
FTYPE2	.BYTE 0

TCHIP	.BYTE "number of chips: "
TCHIPL	= * - TCHIP

.if .def ATARIMAX8
TTITLE	.BYTE 125, "AtariMax 8MBit FlashCart Tester V0.5",155
.endif
.if .def MEGAMAX16
TTITLE	.BYTE 125, "Megamax 16k FlashCart Tester V0.5",155
.endif
.if .def FREEZER2005
TTITLE	.BYTE 125, "Turbo Freezer 2005 CartEmu Tester V0.5",155
.endif
.if .def MEGA512
TTITLE	.BYTE 125, "Mega 512k FlashCart Tester V0.5",155
.endif
.if .def MEGA4096
TTITLE	.BYTE 125, "4MB Mega FlashCart Tester V0.5",155
.endif
TTITLEL	= * - TTITLE

TMENU	.BYTE 155,155
	.BYTE "1) Test flash cart",155
	.BYTE "0) Exit program",155
	.BYTE "> "
TMENUL	= * - TMENU

TLOOP	.BYTE "loop counter: "
TLOOPL	= * - TLOOP

TERAS	.BYTE " erase"
TERASL	= * - TERAS

TCONT	.BYTE 155
	.BYTE "Press any key to continue > "
TCONTL	= * - TCONT

	.include "cio.src"
	.include "iohelp.src"
	.include "iohelpfl.src"


DATABUF = (*+255) & $FF00

	.BANK
	* = $2E0
	.WORD START

