;  bflash - program Bernd's 512k Megacart
;
;  Copyright (C) 2004-2010 Matthias Reichl <hias@horus.com>
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

	.include "cio.inc"
	.include "libflash.inc"

START	= $2000

	.BANK
	* = START

	JSR INIT

MAINLP	BPUT 0, TTITLEL, TTITLE
	JSR FINIT
	JSR FENABLE
	JSR FDETECT
	JSR FDISABLE

	LDA FTYPE
	JSR PFTYPE
	LDA FTYPE
	BPL MOK

	JSR GETCHAR
	BPL MAINLP
	JMP EXIT

MOK	BPUT 0, TMENUL, TMENU
MENULP	JSR GETCHAR
	CPY #128
	BNE MENUL1
	JMP MAINLP
MENUL1	CMP #'0
	BNE NEXIT
EXIT	JSR CLEANUP
	JMP ($A)

NEXIT	CMP #'1
	BNE NO1

	LDX #MODEP
	JMP DOCOMMON

NO1	CMP #'2
	BNE NO2

	LDX #MODEV
	JMP DOCOMMON

NO2	CMP #'3
	BNE NO3

	LDX #MODED
	JMP DOCOMMON

NO3	CMP #'4
	BNE NO4

	JMP DOERAS

NO4	JMP MENULP


DOERAS	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR

	BPUT 0, TASKERL, TASKER
	JSR YESNO
	BEQ DOERAS1
	JMP MAINLP

DOERAS1	LDA #155
	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR

	BPUT 0, TERASL, TERAS

	JSR FADRZERO
	JSR FENABLE
	JSR FCERAS
	PHP
	PHP
	JSR FDISABLE
	PLP
	JSR PSTAT
	PLP
	BMI DOCONT

DOCONTS	BPUT 0, TFINIL, TFINI

DOCONT	BPUT 0, TCONTL, TCONT
	JSR GETCHAR
	JMP MAINLP

MODE	.BYTE 0
MODEP	= $00	; program flash
MODEV	= $40	; verify
MODED	= $80	; dump flash to file

; common entry point
DOCOMMON
	STX MODE

	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR

; flash offset 0
	JSR FADRZERO

; set data buffer address
	LDA #<DATABUF
	STA DATAADR
	LDA #>DATABUF
	STA DATAADR+1

	BPUT 0, TFILNAL, TFILNA
	JSR GETFN
	BPL DOCOMM1
	JMP MAINLP

DOCOMM1	BIT MODE
	BMI DOCOMM2
	OPEN 1,4,0,FNBUF
	JMP DOCOMM3

DOCOMM2	OPEN 1,8,0,FNBUF
DOCOMM3	BPL DOCOMM4
	CLOSE 1
	PRINT 0, TOPENER
	JMP DOCONT

DOCOMM4	LDA #155
	JSR PUTCHAR

	BIT MODE
	CMP #MODEP
	BNE DOLOOP

	BPUT 0, TERASL, TERAS

	JSR FENABLE
	JSR FCERAS
	PHP
	JSR FDISABLE
	PLP
	BPL DOCOMM5

DOCOMER
	JSR PERROR

DOCOMEX	CLOSE 1
	JMP DOCONT

DOCOMM5	JSR POK
	JMP DOLOOP

; flash/write/verify data, depending on MODE
DOLOOP	BIT MODE
	BPL DOLOOP0
	JMP DOLOOPD	; dump mode
DOLOOP0

; check if we have some more data
	BGET 1, 1, DATABUF
	BPL DOLOOP1

; no, end of file
DOLPOK	CLOSE 1
	JMP DOCONTS	; report success

DOLOOP1	JSR PFLADR

; read rest of data block
	BPUT 0, TRDDATL, TRDDAT
	BGET 1, 8191, DATABUF+1
	BPL DOLOOP2
	JMP DOCOMER

DOLOOP2 JSR POK
	BIT MODE
	BVS DOLOOPV	; verify flash

; program block
	BPUT 0, TPROGFL, TPROGF

	JSR FENABLE
	LDX #$20
	JSR FWPAGE
	PHP
	JSR FDISABLE
	PLP
	BPL DOLOOPN

; print error plus address
DOLPERA	JSR PERRADR
	JMP DOCOMEX

; print ok and go on to next block
DOLOOPN	JSR POK
	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC DOLOOP3
	INC FLASHADR+2

DOLOOP3	LDA FLASHADR+2
	CMP #8
	BEQ DOLOOPX
	JMP DOLOOP

DOLOOPX	JMP DOLPOK

; verify block
DOLOOPV	BPUT 0, TVERIFL, TVERIF
	JSR FENABLE
	LDX #$20
	JSR FCPAGE
	PHP
	JSR FDISABLE
	PLP
	BMI DOLPERA
	JMP DOLOOPN

; dump block to file
DOLOOPD	JSR PFLADR
	BPUT 0, TREADFL, TREADF
	JSR FENABLE
	LDX #$20
	JSR FRPAGE
	JSR FDISABLE
	JSR POK
	BPUT 0, TWRDATL, TWRDAT
	BPUT 1, 8192, DATABUF
	BPL DOLOOP4
	JMP DOCOMER

DOLOOP4	JMP DOLOOPN

INIT	LDA 106
	STA M106
	LDA 740
	STA M740
	LDA #$80
	STA 106
	STA 740
	JSR GR0

	LDA $D301
	STA MD301
	ORA #2
	STA $D301
	RTS

CLEANUP	LDA MD301
	STA $D301
	LDA M106
	STA 106
	LDA M740
	STA 740
	JMP GR0

M106	.BYTE 0
M740	.BYTE 0
MD301	.BYTE 0


TFA10	.BYTE "Detected ", $99
	.BYTE +$80,"AMD 29F010"
	.BYTE $19,155

TFA10B	.BYTE "Detected ", $99
	.BYTE +$80,"AMD 29F010B"
	.BYTE $19,155

TFA40B	.BYTE "Detected ", $99
	.BYTE +$80,"AMD 29F040B"
	.BYTE $19,155

TFS10B	.BYTE "Detected ", $99
	.BYTE +$80,"ST 29F010B"
	.BYTE $19,155

TFS40B	.BYTE "Detected ", $99
	.BYTE +$80,"ST 29F040B"
	.BYTE $19,155

TFB40	.BYTE "Detected ", $99
	.BYTE +$80,"BM 29F040"
	.BYTE $19,155

TUNKFL	.BYTE "No or unknown flash",155


; print flash type
PFTYPE	CMP #TAMD10
	BNE PFTYPE1
	PRINT 0, TFA10
	RTS
PFTYPE1	CMP #TAMD10B
	BNE PFTYPE2
	PRINT 0, TFA10B
	RTS
PFTYPE2	CMP #TAMD40B
	BNE PFTYPE3
	PRINT 0, TFA40B
	RTS
PFTYPE3	CMP #TST10B
	BNE PFTYPE4
	PRINT 0, TFS10B
	RTS
PFTYPE4	CMP #TST40B
	BNE PFTYPE5
	PRINT 0, TFS40B
	RTS
PFTYPE5	CMP #TBM40
	BNE PFTYPE6
	PRINT 0, TFB40
	RTS

PFTYPE6	PRINT 0, TUNKFL
	RTS

; print flash address
PFLADR	LDA #$99
	JSR PUTCHAR
	LDA FLASHADR+2
	JSR PUTHEXI
	LDA FLASHADR+1
	JSR PUTHEXI
	LDA FLASHADR+0
	JSR PUTHEXI
	LDA #$19
	JSR PUTCHAR
	LDA #155
	JMP PUTCHAR

; print error plus internal flash address
PERRADR	BPUT 0, TERRADRL, TERRADR
	LDA FLASHADI+2
	JSR PUTHEX
	LDA FLASHADI+1
	JSR PUTHEX
	LDA FLASHADI
	JSR PUTHEX
	LDA #155
	JMP PUTCHAR


TTITLE	.BYTE 125, "512k Mega FlashCart Writer V0.2",155
	.BYTE "(c) 2010 by Matthias Reichl",155,155
TTITLEL	= * - TTITLE

TMENU	.BYTE 155
	.BYTE "1) Program flash cart",155
	.BYTE "2) Verify flash cart",155
	.BYTE "3) Write flash cart to file",155
	.BYTE "4) Erase flash cart",155
	.BYTE "0) Exit program",155
	.BYTE "> "
TMENUL	= * - TMENU

TASKER	.BYTE "Completely erase flash cart (y/n)? "
TASKERL	= * - TASKER

TERAS	.BYTE "erasing cart: "
TERASL	= * - TERAS

TFILNA	.BYTE "Filename > "
TFILNAL	= * - TFILNA

TOPENER	.BYTE "Error opening file!",155

TERRADR	.BYTE "Error at "
TERRADRL = * - TERRADR

TRDDAT	.BYTE " reading data: "
TRDDATL	= * - TRDDAT

TWRDAT	.BYTE " writing data: "
TWRDATL	= * - TWRDAT

TPROGF	.BYTE "  programming: "
TPROGFL	= * - TPROGF

TREADF	.BYTE "reading flash: "
TREADFL	= * - TREADF

TVERIF	.BYTE "    verifying: "
TVERIFL	= * - TVERIF

TFINI	.BYTE 155, "operation successfully completed",155
TFINIL	= * - TFINI

TCONT	.BYTE 155
	.BYTE "Press any key to continue > "
TCONTL	= * - TCONT



	.include "libflash-mega512.src"
	.include "iohelp.src"

BUF	.DC 128 0

	* = (*+255) & $FF00
DATABUF	= *

	.BANK
	* = $2E0
	.WORD START

